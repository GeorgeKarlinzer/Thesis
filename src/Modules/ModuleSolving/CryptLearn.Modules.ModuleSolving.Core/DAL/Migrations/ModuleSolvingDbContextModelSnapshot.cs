// <auto-generated />
using System;
using CryptLearn.Modules.ModuleSolving.Core.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CryptLearn.Modules.ModuleSolving.Core.DAL.Migrations
{
    [DbContext(typeof(ModuleSolvingDbContext))]
    partial class ModuleSolvingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CryptLearn.Modules.ModuleSolving.Core.Entities.Language", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Name");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("CryptLearn.Modules.ModuleSolving.Core.Entities.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AthorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("CryptLearn.Modules.ModuleSolving.Core.Entities.Solution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LanguageName");

                    b.HasIndex("ModuleId");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("CryptLearn.Modules.ModuleSolving.Core.Entities.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LanguageName");

                    b.HasIndex("ModuleId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("CryptLearn.Modules.ModuleSolving.Core.Entities.Solution", b =>
                {
                    b.HasOne("CryptLearn.Modules.ModuleSolving.Core.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CryptLearn.Modules.ModuleSolving.Core.Entities.Module", null)
                        .WithMany("Solutions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("CryptLearn.Modules.ModuleSolving.Core.Entities.Test", b =>
                {
                    b.HasOne("CryptLearn.Modules.ModuleSolving.Core.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CryptLearn.Modules.ModuleSolving.Core.Entities.Module", null)
                        .WithMany("Tests")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("CryptLearn.Modules.ModuleSolving.Core.Entities.Module", b =>
                {
                    b.Navigation("Solutions");

                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
